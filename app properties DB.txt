		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

#Allow H2 DB to be accessed via browser and via JAVA application
spring.h2.console.enabled=true
#database server path
spring.h2.console.path=/h2-console
#DB url and DB name (propertydb)
spring.datasource.url=jdbc:h2:file:~/h2/propertydb
#DB username
spring.datasource.username=sa
#DB password
spring.datasource.password=
#DB driver
spring.datasource.driverClassName=org.h2.Driver
#Tells to keep existing data and table while server restarts, other value is create where after server restarts all the tables will be dropped and new tables will be created
spring.jpa.hibernate.ddl-auto = update
#This enables printing of sql queries generated by hibernate in console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

============================================ H2 DB was for local env =======================================================
============================================ Now for DEV env , MYSQL server ================================================
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.0.32</version>
<!--	comment = 	[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.32 has been relocated to com.mysql:mysql-connector-j:jar:8.0.32: MySQL Connector/J artifacts moved to reverse-DNS compliant Maven 2+ coordinates.-->
		</dependency>

#DB url and DB name (propertydb)
spring.datasource.url=jdbc:mysql://localhost:3306/pmsdb-dev?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#DB username
spring.datasource.username=root
#DB password
spring.datasource.password=amit
#DB driver
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#Tells to keep existing data and table while server restarts, other value is create where after server restarts all the tables will be dropped and new tables will be created
spring.jpa.hibernate.ddl-auto = update
#This enables printing of sql queries generated by hibernate in console
spring.jpa.show-sql=true
#Line 11 is commented because we dont't want to see SQL queries on production
##Hibernate properties
#The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jackson.serialization.fail-on-empty-beans=false

